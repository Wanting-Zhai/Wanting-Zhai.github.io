<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Wanting Zhai</title>
    <link>/post/index.xml</link>
    <description>Recent content in Posts on Wanting Zhai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Your Name</copyright>
    <lastBuildDate>Sun, 05 Mar 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>February 28, 2017 - In-Class Project</title>
      <link>/post/february-28-2017-in-class-project/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/february-28-2017-in-class-project/</guid>
      <description>&lt;div id=&#34;part1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;part1&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;section&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ckm_nodes=read.csv(&amp;quot;ckm_nodes.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(ckm_nodes$adoption_date,exclude = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15 
##   11    9    9   11   11   11   13    7    4    1    5    3    3    4    4 
##   16   17  Inf &amp;lt;NA&amp;gt; 
##    2    1   16  121&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;16 doctors never prescribed tetracycline.&lt;/p&gt;
&lt;p&gt;121 doctor “NA”&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;section-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;index=which(!is.na(ckm_nodes$adoption_date))
length(index)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 125&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cleaned_nodes=ckm_nodes[c(index),]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;adopters=function(month,not.yet=FALSE){
  if (not.yet==FALSE){
    return(as.vector(cleaned_nodes$adoption_date==month))
  }
  else {
    return(as.vector(cleaned_nodes$adoption_date&amp;gt;month))
  }
}

adopters(month=14,not.yet=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE
##  [12] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
##  [23] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE
##  [34] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE
##  [45] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE
##  [56] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE
##  [67]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
##  [78] FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE
##  [89]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE
## [100] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE
## [111] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
## [122] FALSE FALSE FALSE  TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(adopters(month=14,not.yet=TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 23&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;5&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;matrix=read.table(&amp;quot;ckm_network.dat&amp;quot;)
clean_network=matrix[index,index]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;6&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;contact=apply(clean_network,1,sum)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;part2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Part2&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;section-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;7&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;a&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;a&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;count_peer_pressure=function(index,month){
  sum((cleaned_nodes[which(clean_network[index]==1),2]&amp;lt;=month))
}
count_peer_pressure(37,5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;b&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;b&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prop_peer_pressure=function(index,month){
  if (count_peer_pressure(index,month)==0){
    return(NaN)
  } else{
    m=count_peer_pressure(index,month)
  m/length((cleaned_nodes[which(clean_network[index]==1),2]&amp;lt;=month))
  }
}

prop_peer_pressure(37,5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prop_peer_pressure(102,14)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NaN&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;8&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;a-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;a&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;average_peer_pressure=function(month){
m1=which(adopters(month))
v1=vector(mode=&amp;quot;numeric&amp;quot;,length=length(m1))

 for (i in 1:length(m1)){
   v1[i]=prop_peer_pressure(m1[i],month)
 }
 mean1=mean(v1,na.rm=T)
 
 m2=which(adopters(month,not.yet=TRUE))
 v2=vector(mode=&amp;quot;numeric&amp;quot;,length=length(m2))
 for (i in 1:length(m2)){
   v2[i]=prop_peer_pressure(m2[i],month)
 }
mean2=mean(v2,na.rm=T)
 
return(c(mean1,mean2))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;b-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;b&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;month=matrix(1:17,nrow = 17, ncol = 1)
result=apply(month,1,function(x) average_peer_pressure(x))
plot(result[1,1:17],type=&amp;quot;l&amp;quot;)
lines(result[2,1:17],type=&amp;quot;l&amp;quot;,col=&amp;quot;red&amp;quot;,ylab=&amp;quot;Proportion&amp;quot;)
legend(&amp;quot;bottomright&amp;quot;,c(&amp;quot;in that month&amp;quot;,&amp;quot;after that month&amp;quot;),lwd=1,col=c(1,2))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-03-05-february-28-2017-in-class-project_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;difference=result[1,1:17]-result[2,1:17]
plot(difference,type=&amp;quot;l&amp;quot;,ylab=&amp;quot;Proportion Difference&amp;quot;)
abline(h=0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-03-05-february-28-2017-in-class-project_files/figure-html/unnamed-chunk-10-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Not necessary. Since proportion difference sometimes is less than 0 and sometimes is larger than 0.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>March 7, 2017 - Pre-Class</title>
      <link>/post/march-7-2017-pre-class/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/march-7-2017-pre-class/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean.jackknife &amp;lt;- function(a_vector) {
  a&amp;lt;-rep(0,length(a_vector))
  for (i in 1:length(a_vector)){
    a[i]&amp;lt;-mean(a_vector[-i])
  }
  jackknife.variance&amp;lt;-((length(a_vector) - 1)/length(a_vector)) * sum((a - mean(a))^2)
  jackknife.stderr&amp;lt;-sqrt(jackknife.variance)
  return(jackknife.stderr)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;some_normals &amp;lt;- rnorm(100,mean=7,sd=5)
mean(some_normals)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7.19347&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(formula_se_of_mean &amp;lt;- sd(some_normals)/sqrt(length(some_normals)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.4429357&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all.equal(formula_se_of_mean,mean.jackknife(some_normals))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
